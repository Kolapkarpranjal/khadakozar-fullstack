import { useState, useEffect } from "react";
import { useLanguage } from "../hooks/useLanguage";

export default function UpakaramPage() {
  const { language, t } = useLanguage();
  const [events, setEvents] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedEvent, setSelectedEvent] = useState(null);
  const [isLightboxOpen, setIsLightboxOpen] = useState(false);

  // Static events data
  const staticEvents = [
    {
      _id: 1,
      title: language === 'mr' ? 'рдЕрдореНрдмреБрд▓рдВрд╕' : 'Ambulance',
      description: language === 'mr'
        ? 'рдЧреНрд░рд╛рдорд╕реНрдерд╛рдВрдирд╛ рдЖрдкрддреНрдХрд╛рд▓реАрди рд╡реИрджреНрдпрдХреАрдп рд╕реЗрд╡рд╛ рдЙрдкрд▓рдмреНрдз рдХрд░реВрди рджреЗрдгреНрдпрд╛рд╕рд╛рдареА рдЕрдореНрдмреБрд▓рдВрд╕рдЪреА рд╕реБрд╡рд┐рдзрд╛. рдЖрд░реЛрдЧреНрдп рд╕реЗрд╡рд╛рдВрдЪреНрдпрд╛ рд╕реБрд▓рднрддреЗрд╕рд╛рдареА рдорд╣рддреНрддреНрд╡рдкреВрд░реНрдг рдпреЛрдЧрджрд╛рди.'
        : 'Ambulance facility to provide emergency medical services to villagers. Important contribution for accessibility of healthcare services.',
      imageUrl: '/images/upakaram/event2.jpg',
      altText: language === 'mr' ? 'рдЕрдореНрдмреБрд▓рдВрд╕' : 'Ambulance',
      status: 'Completed',
      date: '2024'
    },
    {
      _id: 2,
      title: language === 'mr' ? 'рдЕрдореНрдмреБрд▓рдВрд╕' : 'Ambulance',
      description: language === 'mr'
        ? 'рдЧреНрд░рд╛рдорд╕реНрдерд╛рдВрдирд╛ рдЖрдкрддреНрдХрд╛рд▓реАрди рд╡реИрджреНрдпрдХреАрдп рд╕реЗрд╡рд╛ рдЙрдкрд▓рдмреНрдз рдХрд░реВрди рджреЗрдгреНрдпрд╛рд╕рд╛рдареА рдЕрдореНрдмреБрд▓рдВрд╕рдЪреА рд╕реБрд╡рд┐рдзрд╛. рдЖрд░реЛрдЧреНрдп рд╕реЗрд╡рд╛рдВрдЪреНрдпрд╛ рд╕реБрд▓рднрддреЗрд╕рд╛рдареА рдорд╣рддреНрддреНрд╡рдкреВрд░реНрдг рдпреЛрдЧрджрд╛рди.'
        : 'Ambulance facility to provide emergency medical services to villagers. Important contribution for accessibility of healthcare services.',
      imageUrl: '/images/upakaram/event3.jpg',
      altText: language === 'mr' ? 'рдЕрдореНрдмреБрд▓рдВрд╕' : 'Ambulance',
      status: 'Completed',
      date: '2024'
    },
    {
      _id: 3,
      title: language === 'mr' ? 'рд╡реИрдХреБрдВрда рд░рде' : 'Vaikunth Rath',
      description: language === 'mr'
        ? 'рд╡реИрдХреБрдВрда рд░рде рд╣рд╛ рдПрдХ рдорд╣рддреНрддреНрд╡рдкреВрд░реНрдг рдзрд╛рд░реНрдорд┐рдХ рдЖрдгрд┐ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдХрд╛рд░реНрдпрдХреНрд░рдо рдЖрд╣реЗ. рд╣рд╛ рд░рде рдЧрд╛рд╡рд╛рддреАрд▓ рд╕рд░реНрд╡ рднрд╛рд╡рд┐рдХрд╛рдВрд╕рд╛рдареА рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдЖрдирдВрдж рдЖрдгрд┐ рд╢рд╛рдВрддреА рдЖрдгрддреЛ. рд╡реИрдХреБрдВрда рд░рдерд╛рдЪреНрдпрд╛ рдорд╛рдзреНрдпрдорд╛рддреВрди рдЧрд╛рд╡рд╛рддреАрд▓ рд▓реЛрдХрд╛рдВрдЪреА рдзрд╛рд░реНрдорд┐рдХ рднрд╛рд╡рдирд╛ рдЬрд╛рдЧреГрдд рд╣реЛрддреЗ рдЖрдгрд┐ рд╕рд╛рдореБрджрд╛рдпрд┐рдХ рдПрдХрддрд╛ рдордЬрдмреВрдд рд╣реЛрддреЗ. рд╣рд╛ рдХрд╛рд░реНрдпрдХреНрд░рдо рдЧрд╛рд╡рд╛рдЪреНрдпрд╛ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд╛рд░рд╕рд╛рдЪрд╛ рдПрдХ рдорд╣рддреНрддреНрд╡рдкреВрд░реНрдг рднрд╛рдЧ рдЖрд╣реЗ. рд╡реИрдХреБрдВрда рд░рдерд╛рдЪреНрдпрд╛ рдЖрдпреЛрдЬрдирд╛рдореБрд│реЗ рдЧрд╛рд╡рд╛рддреАрд▓ рд╕рд░реНрд╡ рд╡рдпреЛрдЧрдЯрд╛рддреАрд▓ рд▓реЛрдХ рдПрдХрддреНрд░ рдпреЗрддрд╛рдд рдЖрдгрд┐ рд╕рд╛рдореВрд╣рд┐рдХ рдкреНрд░рд╛рд░реНрдердирд╛ рдХрд░рддрд╛рдд. рдпрд╛ рдХрд╛рд░реНрдпрдХреНрд░рдорд╛рдЪреНрдпрд╛ рдорд╛рдзреНрдпрдорд╛рддреВрди рдЧрд╛рд╡рд╛рддреАрд▓ рд▓реЛрдХрд╛рдВрдЪреНрдпрд╛ рдордзреНрдпреЗ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдЬрд╛рдЧреГрддреА рдирд┐рд░реНрдорд╛рдг рд╣реЛрддреЗ. рд╡реИрдХреБрдВрда рд░рде рд╣рд╛ рдХреЗрд╡рд│ рдзрд╛рд░реНрдорд┐рдХ рдХрд╛рд░реНрдпрдХреНрд░рдо рдирд╕реВрди рддреЛ рдЧрд╛рд╡рд╛рдЪреНрдпрд╛ рд╕рд╛рдорд╛рдЬрд┐рдХ рдПрдХрддреЗрдЪреЗ рдкреНрд░рддреАрдХ рдЖрд╣реЗ. рдпрд╛ рдХрд╛рд░реНрдпрдХреНрд░рдорд╛рдореБрд│реЗ рдЧрд╛рд╡рд╛рддреАрд▓ рд▓реЛрдХрд╛рдВрдЪреНрдпрд╛ рдордзреНрдпреЗ рдкрд░рд╕реНрдкрд░ рдкреНрд░реЗрдо рдЖрдгрд┐ рд╕рд╣рдХрд╛рд░реНрдпрд╛рдЪреА рднрд╛рд╡рдирд╛ рд╡рд╛рдврддреЗ. рд╡реИрдХреБрдВрда рд░рдерд╛рдЪреНрдпрд╛ рдЖрдпреЛрдЬрдирд╛рдореБрд│реЗ рдЧрд╛рд╡рд╛рдЪреА рдзрд╛рд░реНрдорд┐рдХ рдЖрдгрд┐ рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдУрд│рдЦ рдордЬрдмреВрдд рд╣реЛрддреЗ.'
        : 'Vaikunth Rath is an important religious and cultural program. This rath brings spiritual joy and peace to all devotees in the village. Through Vaikunth Rath, the religious sentiments of the villagers are awakened and community unity is strengthened. This program is an important part of the village cultural heritage. The organization of Vaikunth Rath brings together people of all age groups in the village for collective prayers. Through this program, spiritual awakening is created among the villagers. Vaikunth Rath is not just a religious program but a symbol of social unity of the village. This program increases the feeling of mutual love and cooperation among the villagers. The organization of Vaikunth Rath strengthens the religious and cultural identity of the village.',
      imageUrl: '/images/upakaram/event4.jpg',
      altText: language === 'mr' ? 'рд╡реИрдХреБрдВрда рд░рде' : 'Vaikunth Rath',
      status: 'Ongoing',
      date: '2024'
    },
    {
      _id: 4,
      title: language === 'mr' ? 'рдкрд┐рдгреНрдпрд╛рдЪреНрдпрд╛ рдкрд╛рдгреНрдпрд╛рдЪрд╛ рдЯрдБрдХрд░' : 'Drinking Water Tanker',
      description: language === 'mr'
        ? 'рд╕рддрддрдЪреНрдпрд╛ рджреБрд╖реНрдХрд╛рд│рд╛рдореБрд│реЗ рдкрд┐рдгреНрдпрд╛рдЪреНрдпрд╛ рдкрд╛рдгреНрдпрд╛рдЪреА рдЯрдВрдЪрд╛рдИ рдирд┐рд░реНрдорд╛рдг рд╣реЛрддреЗ. рдпрд╛рд╡рд░ рдЙрдкрд╛рдп рдореНрд╣рдгреВрди, рдЧреНрд░рд╛рдордкрдВрдЪрд╛рдпрддрдиреЗ рдЯрдБрдХрд░ рдЦрд░реЗрджреА рдХреЗрд▓рд╛.'
        : 'Continuous drought creates shortage of drinking water. As a solution, the Gram Panchayat purchased a tanker.',
      imageUrl: '/images/upakaram/event5.jpg',
      altText: language === 'mr' ? 'рдкрд┐рдгреНрдпрд╛рдЪреНрдпрд╛ рдкрд╛рдгреНрдпрд╛рдЪрд╛ рдЯрдБрдХрд░' : 'Drinking Water Tanker',
      status: 'Completed',
      date: '2024'
    },
    {
      _id: 5,
      title: language === 'mr' ? 'рд╢реЗрдб рдЙрднрд╛рд░рдгреА' : 'Shed Construction',
      description: language === 'mr'
        ? 'рдЕрдореНрдмреБрд▓рдВрд╕ рд╡ рд╡реИрдХреБрдВрда рд░рде рд╕рд╛рдареА рд╕реНрд╡рддрдВрддреНрд░ рд╢реЗрдб рдЙрднрд╛рд░рдгреА рдХреЗрд▓реА.'
        : 'Separate shed construction for ambulance and Vaikunth Rath.',
      imageUrl: '/images/upakaram/event6.jpg',
      altText: language === 'mr' ? 'рд╢реЗрдб рдЙрднрд╛рд░рдгреА' : 'Shed Construction',
      status: 'Completed',
      date: '2024'
    }
  ];

  useEffect(() => {
    // Simulate loading
    const timer = setTimeout(() => {
      setEvents(staticEvents);
      setLoading(false);
    }, 1000);

    return () => clearTimeout(timer);
  }, [language]);

  const handleViewDetails = (event) => {
    setSelectedEvent(event);
    setIsLightboxOpen(true);
  };

  const closeLightbox = () => {
    setIsLightboxOpen(false);
    setSelectedEvent(null);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50 pt-16 md:pt-20">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 md:py-16">
        {/* Header */}
        <div className="mb-6 md:mb-8">
          <h1 className="text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 mb-2 px-4 sm:px-0">
            {language === 'mr' ? 'рдЧреНрд░рд╛рдордкрдВрдЪрд╛рдпрдд рдЙрдкрдХреНрд░рдо' : 'Gram Panchayat Initiatives'}
          </h1>
          <p className="text-base sm:text-lg text-gray-600 px-4 sm:px-0">
            {language === 'mr' 
              ? 'рдЧреНрд░рд╛рдордкрдВрдЪрд╛рдпрдд рдЦрдбрдХ рдУрдЭрд░рджреНрд╡рд╛рд░реЗ рдЪрд╛рд▓рд╡рд┐рд▓реНрдпрд╛ рдЬрд╛рдгрд╛рд▒реНрдпрд╛ рд╡рд┐рд╡рд┐рдз рдЙрдкрдХреНрд░рдо рдЖрдгрд┐ рдХрд╛рд░реНрдпрдХреНрд░рдорд╛рдВрдЪреА рдорд╛рд╣рд┐рддреА'
              : 'Information about various initiatives and programs run by Gram Panchayat Khadak Ozar'
            }
          </p>
        </div>

        {/* Events Grid */}
        {loading ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[...Array(5)].map((_, index) => (
              <div key={index} className="bg-white rounded-xl shadow-lg overflow-hidden">
                <div className="h-48 bg-gray-200 animate-pulse"></div>
                <div className="p-6">
                  <div className="h-6 bg-gray-200 animate-pulse rounded mb-3"></div>
                  <div className="h-4 bg-gray-200 animate-pulse rounded mb-2"></div>
                  <div className="h-4 bg-gray-200 animate-pulse rounded w-3/4"></div>
                </div>
              </div>
            ))}
          </div>
        ) : events.length === 0 ? (
          <div className="text-center py-16">
            <div className="text-6xl text-gray-300 mb-4">ЁЯУЕ</div>
            <h3 className="text-2xl font-semibold text-gray-700 mb-2">
              {language === 'mr' ? 'рдХреЛрдгрддреЗрд╣реА рдЙрдкрдХреНрд░рдо рдирд╛рд╣реАрдд' : 'No Events Available'}
            </h3>
            <p className="text-gray-500">
              {language === 'mr' 
                ? 'рд╕рдзреНрдпрд╛ рдХреЛрдгрддреЗрд╣реА рдЙрдкрдХреНрд░рдо рдЙрдкрд▓рдмреНрдз рдирд╛рд╣реАрдд.'
                : 'Currently no events are available.'
              }
            </p>
          </div>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {events.map((event) => (
              <div key={event._id} className="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
                <div className="relative h-48 overflow-hidden">
                  <img
                    src={event.imageUrl}
                    alt={event.altText}
                    className="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
                    onError={(e) => {
                      e.target.src = '/images/placeholder-event.jpg';
                    }}
                  />
                </div>
                <div className="p-6">
                  <div className="flex justify-between items-start mb-3">
                    <h3 className="text-xl font-bold text-gray-900">{event.title}</h3>
                    <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                      event.status === 'Ongoing' 
                        ? 'bg-green-100 text-green-800' 
                        : 'bg-blue-100 text-blue-800'
                    }`}>
                      {event.status}
                    </span>
                  </div>
                  <p className="text-gray-600 mb-4 line-clamp-3">{event.description}</p>
                  <p className="text-sm text-gray-500 mb-4">
                    {language === 'mr' ? 'рддрд╛рд░реАрдЦ' : 'Date'}: {event.date}
                  </p>
                  <button
                    onClick={() => handleViewDetails(event)}
                    className="w-full bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-200 flex items-center justify-center gap-2"
                  >
                    <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                    {language === 'mr' ? 'рддрдкрд╢реАрд▓ рдкрд╣рд╛' : 'View Details'}
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}

        {/* Lightbox Modal */}
        {isLightboxOpen && selectedEvent && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
            <div className="bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
              <div className="relative h-64 overflow-hidden">
                <img
                  src={selectedEvent.imageUrl}
                  alt={selectedEvent.altText}
                  className="w-full h-full object-cover"
                />
                <button
                  onClick={closeLightbox}
                  className="absolute top-4 right-4 bg-white bg-opacity-80 hover:bg-opacity-100 text-gray-800 rounded-full p-2 transition-all duration-200"
                >
                  тЬХ
                </button>
              </div>
              <div className="p-6">
                <h2 className="text-2xl font-bold text-gray-900 mb-4">{selectedEvent.title}</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                  <div className="flex items-center gap-3">
                    <svg className="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                    <div>
                      <p className="text-sm text-gray-500">
                        {language === 'mr' ? 'рд╕реНрдерд╛рди' : 'Location'}
                      </p>
                      <p className="font-semibold">
                        {language === 'mr' ? 'рдЦрдбрдХ рдУрдЭрд░' : 'Khadak Ozar'}
                      </p>
                    </div>
                  </div>
                  <div className="flex items-center gap-3">
                    <svg className="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
                    </svg>
                    <div>
                      <p className="text-sm text-gray-500">
                        {language === 'mr' ? 'рд╕рд╣рднрд╛рдЧреА' : 'Attendees'}
                      </p>
                      <p className="font-semibold">
                        {language === 'mr' ? 'рдЕрдкреЗрдХреНрд╖рд┐рдд рд╕рд╣рднрд╛рдЧреА' : 'Expected Attendees'}
                      </p>
                    </div>
                  </div>
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-2">
                    {language === 'mr' ? 'рдЙрдкрдХреНрд░рдорд╛рдЪреЗ рд╡рд░реНрдгрди' : 'Event Description'}
                  </h3>
                  <p className="text-gray-600 leading-relaxed">{selectedEvent.description}</p>
                </div>
                <div className="mt-6 flex justify-end">
                  <button
                    onClick={closeLightbox}
                    className="bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-6 rounded-lg transition-all duration-200"
                  >
                    {language === 'mr' ? 'рдмрдВрдж рдХрд░рд╛' : 'Close'}
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
